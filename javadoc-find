#!/usr/bin/env perl
use warnings;
use strict;

sub usage {
	print STDERR "javadoc-find <class or function>\n";
	print STDERR "JAVADOCS environment variable must be defined\n";
	exit 1;
}

my $guess = 0;
my $ARG = $ARGV[0];
usage() if not defined $ARG;

if ($ARG eq "guess") {
	$ARG = $ARGV[1];
	$guess = 1;
}

usage() if not defined $ENV{JAVADOCS};
usage() if not defined $ARG;

my @path = split /\./, $ARG;

my $prelast = $path[$#path-1];
my $last = $path[$#path];

my $theclass = "";
my $themeth = undef;

#print "<$prelast>.<$last>\n";

if (not defined $prelast) {
	$theclass = $last;
} else {
	if (lc(substr($last, 0, 1)) eq substr($last, 0, 1)) {
		$theclass = $prelast;
		$themeth = $last;
	} else {
		$theclass = $last;
	}
}

my $found = undef;
my $wherefound = undef;

for my $dir (split /:/, $ENV{JAVADOCS}) {
	my @findout = grep { !/class-use/ } split /\n/, `find $dir -name '$theclass.html'`;
	if (@findout > 0) {
		$wherefound = $dir;
		$found = $findout[0];
		last;
	}
}

if (not defined $found) {
	print STDERR "Not found\n";
	exit 1;
}

if (!$guess) {
	print "$found\n";
} else {
	if (substr($found, 0, length($wherefound)) eq $wherefound) {
		$found = substr($found, length($wherefound));
		$found =~ s:^/::g;
		$found =~ s:^api/::g;
		$found =~ s:.html$::g;
		$found =~ s:/:.:g;
		print "$found\n";
	}
}

